{"version":3,"file":"static/js/835.48c9c5a4.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.styled.jsx","components/ContactFilter/ContactFilter.jsx","components/App.styled.jsx","components/pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContactsForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 500px;\n  height: 200px;\n  border: 3px dashed #2a2a2a;\n  padding: 10px;\n  background-color: #ffd11a;\n`;\n\nexport const ContactFormLabel = styled.label`\n  display: block;\n  text-align: center;\n  font-weight: 700;\n`;\n\nexport const ContactFormInput = styled.input`\n  display: block;\n  margin-top: 5px;\n  margin-bottom: 20px;\n`;\n\nexport const ContactFormButton = styled.button`\n  padding: 10px;\n  font-size: 16px;\n  text-transform: capitalize;\n  border: none;\n  border-radius: 5px;\n  &:hover,\n  &:focus {\n    background-color: #8a5dfc;\n  }\n`;\n","import {\n  ContactsForm,\n  ContactFormLabel,\n  ContactFormInput,\n  ContactFormButton,\n} from './ContactForm.styled';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { addContact } from '../../redux/operations';\nimport { selectContacts } from 'redux/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const ContactForm = () => {\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n\n    const newContact = {\n      name: form.elements.name.value,\n      number: form.elements.number.value,\n    };\n\n    for (const item of contacts) {\n      if (item.name === newContact['name']) {\n        Report.warning(\n          'Warning!',\n          `${newContact.name} is already in contacts.`,\n          'Okay'\n        );\n        form.reset();\n        return\n      } \n    }\n\n    dispatch(addContact(newContact));\n    form.reset();\n  };\n\n  return (\n\n    <ContactsForm onSubmit={handleSubmit}>\n      <ContactFormLabel>\n        Name\n        <ContactFormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </ContactFormLabel>\n      <ContactFormLabel>\n        Number\n        <ContactFormInput\n          type=\"text\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </ContactFormLabel>\n\n      <ContactFormButton type=\"submit\">Add contact</ContactFormButton>\n    </ContactsForm>\n  );\n}","import styled from '@emotion/styled';\n\nexport const ContactListContainer = styled.ul`\n  width: 500px;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-self: center;\n  padding: 0;\n  gap: 5px;\n`;\n\nexport const ContactListItem = styled.li`\n  text-align: center;\n  font-size: 16px;\n`;\n\nexport const ContactListText = styled.span`\n  margin-right: 10px;\n`;\n\nexport const ContactListButton = styled.button`\n  padding: 5px;\n  display: inline-flex;\n  font-size: 14px;\n  text-transform: capitalize;\n  border: none;\n  border-radius: 5px;\n  align-items: center;\n\n  &:hover,\n  &:focus {\n    background-color: #8a5dfc;\n  }\n`;\n","import { FaTimesCircle } from 'react-icons/fa';\n\nimport {\n  ContactListContainer,\n  ContactListItem,\n  ContactListText,\n  ContactListButton,\n} from './ContactList.styled';\n\nimport { deleteContact } from '../../redux/operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredContacts } from '../../redux/selectors';\n\nexport const ContactList = () => {\n\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n  \n  return (\n    <ContactListContainer>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem key={id}>\n          <ContactListText>{name}:</ContactListText>\n          <ContactListText>{number}</ContactListText>\n          <ContactListButton\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            <FaTimesCircle style={{ color: 'red', marginRight: '5' }} /> Delete\n          </ContactListButton>\n        </ContactListItem>\n      ))}\n    </ContactListContainer>\n  );\n};","import styled from '@emotion/styled';\n\nexport const ContactFilterLabel = styled.label`\n  display: block;\n  width: 500px;\n  text-align: center;\n  font-weight: 700;\n`;\n\nexport const ContactFilterInput = styled.input`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 5px;\n  margin-bottom: 15px;\n  width: 350px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ContactFilterLabel, ContactFilterInput } from './ContactFilter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filterSlice';\n\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n  <ContactFilterLabel>\n    Find contacts by name\n    <ContactFilterInput type=\"text\" onChange={(event) => dispatch(setFilter(event.target.value))} />\n  </ContactFilterLabel>\n);\n};\n\n\nFilter.propTypes = {\n  filter: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 40;\n  color: #010101;\n`;\n\nexport const PhonebookHeader = styled.h1`\n  display: inline-flex;\n  align-items: center;\n  font-size: 30px;\n`;\n\nexport const ContactsHeader = styled.h2`\n  display: inline-flex;\n  align-items: center;\n  font-size: 30px;\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/ContactFilter/ContactFilter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\n\n\nimport { Container, PhonebookHeader, ContactsHeader } from '../App.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { FaPhoneSquareAlt, FaUser } from 'react-icons/fa';\nimport { selectError, selectIsLoading } from 'redux/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <PhonebookHeader>\n        <FaPhoneSquareAlt style={{ marginRight: '5' }} /> Phonebook\n      </PhonebookHeader>\n      <ContactForm />\n      <ContactsHeader>\n        <FaUser style={{ marginRight: '5' }} /> Contacts\n      </ContactsHeader>\n      <Filter />\n      {isLoading && !error && <Loader />}\n      <ContactList />\n    </Container>\n\n    // <ThemeProvider theme={theme}>\n    //   <Container component=\"main\" maxWidth=\"xs\">\n    //     <Box\n    //       sx={{\n    //         marginTop: 8,\n    //         display: 'flex',\n    //         flexDirection: 'column',\n    //         alignItems: 'center',\n    //       }}\n    //     >\n    //       <h2>Contacts</h2>\n    //       <ContactForm />\n    //       <Filter />\n    //       <ContactList />\n    //     </Box>\n    //   </Container>\n    // </ThemeProvider>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactsForm","styled","ContactFormLabel","ContactFormInput","ContactFormButton","ContactForm","dispatch","useDispatch","contacts","useSelector","selectContacts","onSubmit","e","preventDefault","form","target","newContact","name","elements","value","number","Report","reset","addContact","type","pattern","title","required","ContactListContainer","ContactListItem","ContactListText","ContactListButton","ContactList","selectFilteredContacts","map","id","onClick","deleteContact","style","color","marginRight","ContactFilterLabel","ContactFilterInput","Filter","onChange","event","setFilter","Container","PhonebookHeader","ContactsHeader","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","Loader"],"sourceRoot":""}